global !p
def math():
	return vim.eval('vimtex#syntax#in_mathzone()') == '1'
def comment(): 
	return vim.eval('vimtex#syntax#in_comment()') == '1'
def env(name):
	[x,y] = vim.eval("vimtex#env#is_inside('" + name + "')") 
	return x != '0' and y != '0'
endglobal

snippet mk "Math" wA
$${1}$`!p
if t[2] and t[2][0] not in [',', '.', '?', '-', ' ']:
    snip.rv = ' '
else:
    snip.rv = ''
`$2
endsnippet
snippet dm "Math" wA
\[
$1
.\] $0
endsnippet

snippet beg "begin{} / end{}" bA
\begin{$1}
	$0
\end{$1}
endsnippet

snippet sr "^2" iA
^2
endsnippet

snippet cb "^3" iA
^3
endsnippet

snippet compl "complement" iA
^{c}
endsnippet

snippet td "superscript" iA
^{$1}$0
endsnippet

priority 100
context "math()"
snippet ** "cdot" iA
\cdot 
endsnippet

priority 100
context "math()"
snippet '(?<!\\)(sin|cos|arccot|cot|csc|ln|log|exp|star|perp)' "ln" rwA
\\`!p snip.rv = match.group(1)`
endsnippet

priority 10
context "math()"
snippet "bar" "bar" riA
\overline{$1}$0
endsnippet

priority 100
context "math()"
snippet "([a-zA-Z])bar" "bar" riA
\overline{`!p snip.rv=match.group(1)`}
endsnippet

priority 100
context "math()"
snippet "([a-zA-Z])dot" "dot" riA
\dot{`!p snip.rv=match.group(1)`}
endsnippet

priority 200
context "math()"
snippet "([a-zA-Z])ddot" "ddot" riA
\ddot{`!p snip.rv=match.group(1)`}
endsnippet

priority 10
context "math()"
snippet "hat" "hat" riA
\hat{$1}$0
endsnippet

priority 100
context "math()"
snippet "([a-zA-Z])hat" "hat" riA
\hat{`!p snip.rv=match.group(1)`}
endsnippet

snippet "(\\?\w+)(,\.|\.,)" "Vector postfix" riA
\vec{`!p snip.rv=match.group(1)`}
endsnippet 

snippet enum "Enumerate" bA
\begin{enumerate}
	\item $0
\end{enumerate}
endsnippet

snippet item "Itemize" bA
\begin{itemize}
	\item $0
\end{itemize}
endsnippet
snippet // "Fraction" iA
\\frac{$1}{$2}$0
endsnippet

#snippet '((\d+)|(\d*)(\\)?([A-Za-z]+)((\^|_)(\{\d+\}|\d))*)/' "Fraction" wrA
#\\frac{`!p snip.rv = match.group(1)`}{$1}$0
#endsnippet
#
#priority 1000
#snippet '^.*\)/' "() Fraction" wrA
#`!p
#stripped = match.string[:-1]
#depth = 0
#i = len(stripped) - 1
#while True:
#	if stripped[i] == ')': depth += 1
#	if stripped[i] == '(': depth -= 1
#	if depth == 0: break;
#	i -= 1
#snip.rv = stripped[0:i] + "\\frac{" + stripped[i+1:-1] + "}"
#`{$1}$0
#endsnippet

snippet / "Fraction" i
\\frac{${VISUAL}}{$1}$0
endsnippet

snippet pct "picture" iA
\begin{figure}[H]
	\includegraphics[scale=$2]{$1}
\end{figure}
$0
endsnippet

snippet agn "align" iA
\begin{align*}
	$1
\end{align*}
$2
endsnippet

snippet ffun "function" iA
$1:\mathbb{$2}\supseteq $3\to\mathbb{$4}$5
endsnippet

context "math()"
snippet mR "Real numbers" iA
\mathbb{R}
endsnippet

context "math()"
snippet mN "Natural numbers" iA
\mathbb{N}
endsnippet

context "math()"
snippet mP "Probability" iA
\mathbb{P}
endsnippet

context "math()"
snippet mE "Expected value" iA
\mathbb{E}
endsnippet

context "math()"
snippet mcA "sigma algebra" iA
\mathcal{A}
endsnippet

snippet qed "sqare" bA
\hfill $\square$
$0
endsnippet

snippet mpg "minipage" bA
\begin{minipage}{$0\textwidth}
$1
\end{minipage}
\begin{minipage}{$2\textwidth}
$3
\end{minipage}
$4
endsnippet

snippet mtx "matrix" iA
\begin{pmatrix}$1\end{pmatrix}$0
endsnippet

snippet ae "ä" iA
ä
endsnippet
snippet oe "ö" iA
ö
endsnippet
snippet ue "ü" iA
ü
endsnippet
snippet Ae "Ä" iA
Ä
endsnippet
snippet Oe "Ö" iA
Ö
endsnippet
snippet Ue "Ü" iA
Ü
endsnippet

context "math()"
snippet invs "inverse" iA
^{-1}
endsnippet

snippet '([A-Za-z])(\d)' "auto subscript" wrA
`!p snip.rv = match.group(1)`_`!p snip.rv = match.group(2)`
endsnippet

snippet '([A-Za-z])_(\d\d)' "auto subscript2" wrA
`!p snip.rv = match.group(1)`_{`!p snip.rv = match.group(2)`}
endsnippet

snippet cvec "column vector" iA
\begin{pmatrix} ${1:x}_${2:1}\\\\ \vdots\\\\ $1_${2:n} \end{pmatrix}
endsnippet

snippet SI "SI" iA
\SI{$1}{$2}
endsnippet

snippet mathtemplate "mathtemplate" bA
\documentclass{article}

\usepackage[margin=3cm]{geometry}
\usepackage{amsmath}
\usepackage{amsfonts}
\usepackage{amssymb}
\usepackage{amscd}
\usepackage{standalone}
\usepackage{float}
\usepackage{color}
\usepackage[shortlabels]{enumitem}
\usepackage{graphicx}
\usepackage{caption}
\graphicspath{ {./images/} }

\begin{document}
$1
\end{document}
endsnippet

snippet titlepagetemplate "titlepagetemplate" bA
\begin{titlepage}
	\centering
	{\scshape\LARGE Hochschule für Technik und Wirtschaft Dresden \par}
	\vspace{1cm}
	{\scshape\Large $1 \glqq $2\grqq\par}
	\vspace{1.5cm}
	{\huge\bfseries $3\par}
	\vspace{2cm}
	{\Large\itshape Raphael Neubert \par}
	\vfill
	\begin{minipage}{0.3\textwidth}
		Studiengang:\\\\
		Studiengruppe:\\\\
		Matrikelnummer:
	\end{minipage}
	\begin{minipage}{0.3\textwidth}
		Informatik\\\\
		20/041/61\\\\
		49916
	\end{minipage}
	\vfill

	{\large \today\par}
\end{titlepage}
endsnippet

